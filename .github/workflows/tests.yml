name: Tests

on: [push, pull_request]

jobs:
  test:
    name: Test - ${{ matrix.os }} (${{ matrix.arch }})
    runs-on: ${{ matrix.runner }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: linux
            arch: x86_64
            runner: ubuntu-latest
            target: x86_64-unknown-linux-gnu
          - os: linux
            arch: aarch64
            runner: ubuntu-24.04-arm64
            target: aarch64-unknown-linux-gnu
          - os: windows
            arch: x86_64
            runner: windows-latest
            target: x86_64-pc-windows-msvc
          - os: windows
            arch: aarch64
            runner: windows-latest
            target: aarch64-pc-windows-msvc
          - os: macos
            arch: x86_64
            runner: macos-latest
            target: x86_64-apple-darwin
          - os: macos
            arch: aarch64
            runner: macos-latest
            target: aarch64-apple-darwin

    steps:
      - name: Checkout sources
        uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Install cross-compilation tools (Linux ARM64)
        if: matrix.target == 'aarch64-unknown-linux-gnu'
        run: |
          sudo apt-get update
          sudo apt-get install -y gcc-aarch64-linux-gnu

      - name: Configure cross-compilation (Linux ARM64)
        if: matrix.target == 'aarch64-unknown-linux-gnu'
        run: |
          echo "[target.aarch64-unknown-linux-gnu]" >> ~/.cargo/config.toml
          echo "linker = \"aarch64-linux-gnu-gcc\"" >> ~/.cargo/config.toml

      - name: Cache cargo registry and build
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-${{ matrix.target }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.target }}-cargo-

      - name: Run cargo test
        run: cargo test --target ${{ matrix.target }}
